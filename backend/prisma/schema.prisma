// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  name     String
  password String

  diagnosa  Diagnose[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Diagnose {
  id                 String            @id @default(cuid())
  usia               Int
  gender             Gender
  riwayat_penyakit   String[]
  berat_badan        Float
  tinggi_badan       Float
  rutinitas_olahraga RutinitasOlahraga
  golongan_darah     GolonganDarah

  hasil_diagnosa HasilDiagnosa?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  userDiagnose   User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String
}

model HasilDiagnosa {
  id                   String                @id @default(cuid())
  diagnosa_umum        String
  prediksi_penyakit    PrediksiPenyakit[]
  rekomendasi_makanan  RekomendasiMakanan[]
  rekomendasi_minuman  RekomendasiMinuman[]
  rekomendasi_olahraga RekomendasiOlahraga[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  diagnosa   Diagnose @relation(fields: [diagnoseId], references: [id], onDelete: Cascade)
  diagnoseId String   @unique
}

model PrediksiPenyakit {
  id              String         @id @default(cuid())
  nama            String
  sugesti         String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  HasilDiagnosa   HasilDiagnosa? @relation(fields: [hasilDiagnosaId], references: [id], onDelete: Cascade)
  hasilDiagnosaId String?
}

model RekomendasiMakanan {
  id              String         @id @default(cuid())
  nama            String
  sugesti         String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  HasilDiagnosa   HasilDiagnosa? @relation(fields: [hasilDiagnosaId], references: [id], onDelete: Cascade)
  hasilDiagnosaId String?
}

model RekomendasiMinuman {
  id              String         @id @default(cuid())
  nama            String
  sugesti         String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  HasilDiagnosa   HasilDiagnosa? @relation(fields: [hasilDiagnosaId], references: [id], onDelete: Cascade)
  hasilDiagnosaId String?
}

model RekomendasiOlahraga {
  id              String         @id @default(cuid())
  nama            String
  durasi          String
  rutinitas       String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  HasilDiagnosa   HasilDiagnosa? @relation(fields: [hasilDiagnosaId], references: [id], onDelete: Cascade)
  hasilDiagnosaId String?
}

enum Gender {
  LAKI_LAKI
  PEREMPUAN
}

enum GolonganDarah {
  A
  B
  AB
  O
}

enum RutinitasOlahraga {
  TIDAK
  KURANG
  CUKUP
  BANYAK
}
